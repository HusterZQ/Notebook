1.C++并没有直接定义进行输入或者输出的任何语句，这种功能是由标准库提供的。IO库提供了大量的设施。

2.关于iostream库。iostream库的基础是两种基本类型istream和ostream，即输入流和输出流。术语“流”试图说明字符是随着时间顺序生成或者消耗。

3.iostream的4个IO对象：cin    标准输入
                       cout   标准输出
                       cerr   标准错误（用来输出警告信息和错误信息给程序的使用者）
                       clog   用于产生程序执行的一般信息
    一般情况下，系统会把这些对象与执行程序的窗口相联系起来。而大部分操作系统都提供了重定向输入和输出流的方法。利用重定向可以把这些
    流和所选择的文件联系起来。

4.Linux下编译C语言程序：gcc filename -o outputfilename
                        gcc -Wall filename -o outputfilenmae     -Wall表示把所有的编译提示信息都输出显示给程序员
  Linux下编译C++程序  ：g++ filename -o outputfilename
                        g++ -Wall filename -o outputfilename    
                        (Linux用gcc命令编译c++程序会产生错误，因为在linux下，gcc只能编译源代码而不能链接库，所以如果使用了iostream)
                        (程序会报错，没有链接到iostream库，此时要利用g++命令，g++命令会调用gcc编译器编译代码，然后把库链接过来。)

5.endl是一个特殊值，成为操纵符，将它写入输出流时，具有输出换行的效果，并且刷新与设备相关联的缓冲区。通过刷新缓冲区，用户可以立即看到
  写入到流中的输出。程序员经常在调试过程中插入输出语句，这些语句都应该刷新输出流。如果忘记刷新输出流可能会造成输出停留在缓冲区中，如
  果程序崩溃，将会导致程序错误地推断崩溃的位置。

6.程序使用命名空间可以避免与库中定义的名字相同而引起的无意冲突。（::域操作符 <<输出操作符 >>输入操作符 输入输出操作符返回其左操作数）
